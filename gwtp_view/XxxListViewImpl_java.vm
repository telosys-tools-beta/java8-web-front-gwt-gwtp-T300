/*
 * Created on $today.date ( Date ISO $today.date("yyyy-MM-dd") - Time $today.time )
 * Generated by Telosys ( http://www.telosys.org/ ) version $generator.version
 */
## Package declaration
package ${target.javaPackageFromFolder(${SRC})};
## Lower case entity name used in import declaration
#set( $lowerCaseEntityName = $entity.name.toLowerCase())

import javax.inject.Inject;

## Resolve if the entity got a date element and add the corresponding import
#set( $haveDateField = false)
#foreach( $field in ${entity.attributes} )
#if(!$field.isFK())
#if($field.fullType == 'java.util.Date' && !$haveDateField)
#set( $haveDateField = true)
import com.google.gwt.i18n.shared.DateTimeFormat;
import com.google.gwt.i18n.shared.DefaultDateTimeFormatInfo;
#end
#end
#end
import com.google.gwt.uibinder.client.UiBinder;
import com.google.gwt.user.cellview.client.TextColumn;
import com.google.gwt.user.client.ui.Widget;
import ${ROOT_PKG}.client.application.content.${lowerCaseEntityName}.list.${entity.name}ListPresenter.${entity.name}ListView;
import ${ROOT_PKG}.client.util.common.list.view.AbstractListView;
import ${ROOT_PKG}.shared.dto.${entity.name}Dto;
#if($haveDateField)
import ${ROOT_PKG}.shared.api.Paths;
#end

public class ${entity.name}ListViewImpl extends AbstractListView<${entity.name}ListPresenter, ${entity.name}Dto> implements ${entity.name}ListView {
	interface Binder extends UiBinder<Widget, ${entity.name}ListViewImpl> {
	}

	@Inject
	${entity.name}ListViewImpl(Binder uiBinder) {
		super();
		initWidget(uiBinder.createAndBindUi(this));
		initCellTable();
	}

	@Override
	public void initCellTable() {
## For each field, define the column
#set( $uncapitalizedEntityName = $fn.uncapitalize(${entity.name}))
#foreach( $field in ${entity.attributes} )
#set( $capitalizedFieldName = $fn.capitalize(${field.name}))
		final TextColumn<${entity.name}Dto> col${capitalizedFieldName} = new TextColumn<${entity.name}Dto>() {
			@Override
			public String getValue(final ${entity.name}Dto object) {
#if ($field.isDateType())
				DefaultDateTimeFormatInfo info = new DefaultDateTimeFormatInfo();
				DateTimeFormat dtf = new DateTimeFormat(Paths.SIMPLE_DATE_PATTERN, info) {};
				return object.get${capitalizedFieldName}() != null ? dtf.format(object.get${capitalizedFieldName}()) : "";
#else
				final String result = String.valueOf(object.get${capitalizedFieldName}() != null ? object.get${capitalizedFieldName}() : "");
				return result.length() > CELL_MAX_CHAR ? result.substring(0, CELL_MAX_CHAR) + "..." : result;
#end
			}
		};
		table.addColumn(col${capitalizedFieldName}, messages.${uncapitalizedEntityName}List${capitalizedFieldName}());
#end
		// Actions column
		addDeletionColumn();
		addUpdateColumn();
		provider.addDataDisplay(table);
	}
}